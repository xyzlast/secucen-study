apply plugin: 'java'
apply plugin: 'application'

apply plugin: 'jacoco'
apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'findbugs'

apply plugin: 'org.sonarqube'
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.5"
    }
}

repositories {
    jcenter()
}

dependencies {
    compile 'com.google.guava:guava:23.0'
    compile group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.2.0'
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.16.18'
    compile group: 'org.springframework', name: 'spring-context', version: '5.0.2.RELEASE'
    compile group: 'org.springframework', name: 'spring-jdbc', version: '5.0.2.RELEASE'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.7.4'
    compile group: 'org.springframework', name: 'spring-aop', version: '5.0.2.RELEASE'
    compile group: 'org.assertj', name: 'assertj-core', version: '3.8.0'
    compile 'org.aspectj:aspectjrt:1.8.1'
    compile 'org.aspectj:aspectjtools:1.8.1'
    compile 'org.aspectj:aspectjweaver:1.8.1'

    testCompile 'junit:junit:4.12'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testCompile group: 'org.springframework', name: 'spring-test', version: '5.0.2.RELEASE'

}

pmd {
    ignoreFailures = true
}

pmdMain {
    reports {
        xml.destination = file("${pmd.reportsDir}/pmd.xml")
        html.enabled = true
        xml.enabled = true
    }
}

findbugs {
    ignoreFailures = true
    toolVersion ='3.0.1'
}

findbugsMain {
    reports {
//        xml.enabled = true
//        xml.destination = file("${findbugs.reportsDir}/findbugs.xml")
        html.enabled = true
        html.destination = file("${findbugs.reportsDir}/findbugs.html")
    }
}

checkstyle {
    toolVersion = '8.2'
    ignoreFailures = true
    configFile = rootProject.file("secucen-checkstyle.xml")
    reportsDir = file("${buildDir}/checkstyle-output")
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        csv.enabled = false
        html.enabled= true
        html.destination file("${jacoco.reportsDir}/html")
    }
}

test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacoco.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
    reports {
        junitXml.enabled = true
        html.enabled = true
    }
    ignoreFailures = true
}

mainClassName = 'com.xyzlast.bookstore.App'
